apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
data:
  # General ArgoCD configuration
  application.instanceLabelKey: argocd.argoproj.io/instance
  server.rbac.log.enforce.enable: "false"
  policy.default: role:readonly
  policy.csv: |
    p, role:admin, applications, *, */*, allow
    p, role:admin, clusters, *, *, allow
    p, role:admin, repositories, *, *, allow
    p, role:admin, certificates, *, *, allow
    p, role:admin, accounts, *, *, allow
    p, role:admin, gpgkeys, *, *, allow
    g, argocd-admins, role:admin
    g, system:masters, role:admin

  # Repository configuration
  repositories: |
    - type: git
      url: https://github.com/alessandrorsseixas/git-ops-smart-city-org
      name: smart-city-gitops

  # OIDC configuration
  oidc.config: |
    name: Keycloak
    issuer: https://keycloak.dev.smartcity.local/auth/realms/master
    clientId: argocd
    clientSecret: $oidc.keycloak.clientSecret
    requestedScopes: ["openid", "profile", "email", "groups"]
    requestedIDTokenClaims: {"groups": {"essential": true}}

  # URL configuration
  url: https://argocd.dev.smartcity.local

  # Application settings
  application.resourceTrackingMethod: annotation
  
  # Dex configuration (OIDC)
  dex.config: |
    connectors:
      - type: oidc
        id: keycloak
        name: Keycloak
        config:
          issuer: https://keycloak.dev.smartcity.local/auth/realms/master
          clientId: argocd
          clientSecret: $dex.keycloak.clientSecret
          requestedScopes: ["openid", "profile", "email", "groups"]
          requestedIDTokenClaims: {"groups": {"essential": true}}
          insecureEnableGroups: true
