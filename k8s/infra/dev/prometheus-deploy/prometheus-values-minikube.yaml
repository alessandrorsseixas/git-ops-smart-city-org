# prometheus-values-minikube.yaml
# Configuração otimizada para rodar o kube-prometheus-stack em Minikube.

# --- Desabilitar Componentes Não Essenciais ---
# Alertmanager é usado para roteamento e gerenciamento de alertas. Desnecessário para estudo.
alertmanager:
  enabled: false

# Thanos Ruler é para federação e avaliação de regras em larga escala. Desnecessário.
thanosRuler:
  enabled: false

# --- Configuração do Grafana ---
# Mantemos o Grafana, pois é útil para visualização, mas com recursos mínimos.
grafana:
  enabled: true
  # Desabilitamos a persistência para economizar disco e evitar complexidade de PVC.
  persistence:
    enabled: false
  resources:
    requests:
      cpu: "50m"
      memory: "128Mi"
    limits:
      cpu: "200m"
      memory: "256Mi"

# --- Configuração do Prometheus ---
# Esta é a otimização mais importante.
prometheus:
  prometheusSpec:
    # Reduzimos drasticamente os recursos.
    resources:
      requests:
        cpu: "100m"
        memory: "256Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"
    # Desabilitamos a persistência. Em Minikube, os dados serão perdidos ao reiniciar o Pod,
    # o que é aceitável para um ambiente de estudo. Usa um 'emptyDir' no lugar.
    storageSpec: {}
    # Reduz o tempo de retenção de métricas para economizar espaço em disco/memória.
    retention: 24h

# --- Otimização dos Exporters e Componentes do Core ---
# Reduzimos também os recursos dos componentes de suporte.
kube-state-metrics:
  resources:
    requests:
      cpu: "50m"
      memory: "128Mi"
    limits:
      cpu: "100m"
      memory: "256Mi"

prometheus-node-exporter:
  resources:
    requests:
      cpu: "20m"
      memory: "64Mi"
    limits:
      cpu: "100m"
      memory: "128Mi"

prometheusOperator:
  resources:
    requests:
      cpu: "50m"
      memory: "128Mi"
    limits:
      cpu: "200m"
      memory: "256Mi"